{"version":3,"file":"static/js/789.811e21f0.chunk.js","mappings":"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","sources":["components/SearchAPI/SearchAPI.js","pages/MovieList/MovieItem.jsx","pages/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/MovieList/MovieList.module.scss?78f4"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd927ad5252ec098db20e3d62a3629292';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const SearchTrend = async (page = 1) => {\n  const serverDataURL = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const SearchMovies = async (name, page = 1) => {\n  const serverDataURL = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${name}&include_adult=false`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const SearchMoviesDetails = async id => {\n  const serverDataURL = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const SearchMoviesActor = async id => {\n  const serverDataURL = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const SearchMoviesReviews = async id => {\n  const serverDataURL = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'components/SearchAPI/SearchAPI';\nimport MovieListSCSS from './MovieList.module.scss';\nimport defoltImg from 'components/img/default.jpg';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const url = location.pathname === '/' ? `movies/` : '';\n  return (\n    <li className={MovieListSCSS.item}>\n      <Link to={`${url}${movie.id}`} className={MovieListSCSS.link}>\n        <img\n          src={movie.poster_path ? IMG_URL + movie.poster_path : defoltImg}\n          alt={movie.title}\n          className={MovieListSCSS.img}\n        />\n        <div className={MovieListSCSS.info}>\n          <h3>{movie.title}</h3>\n        </div>\n      </Link>\n    </li>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { SearchTrend } from '../../components/SearchAPI/SearchAPI';\nimport { MovieItem } from './MovieItem';\nimport MovieListSCSS from './MovieList.module.scss';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieList = ({ list }) => {\n  const [movies, setMovies] = useState([]);\n  const [title, setTitle] = useState(true);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    if (list) {\n      setMovies(list);\n      setTitle(false);\n      return;\n    }\n    serverAPI();\n  }, [list]);\n\n  const serverAPI = async () => {\n    setLoader(true);\n    const data = await SearchTrend();\n    const results = await data.results;\n    console.log(results);\n    setMovies(results);\n    return setLoader(false);\n  };\n\n  return (\n    <section>\n      {title && <h2 className={MovieListSCSS.text}>Trending today</h2>}\n      {loader && <Loader />}\n      <ul className={MovieListSCSS.list}>\n        {movies.map(movie => (\n          <MovieItem key={movie.id} movie={movie}></MovieItem>\n        ))}\n      </ul>\n    </section>\n  );\n};\nMovieList.propTypes = {\n  list: PropTypes.array,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MovieList_text__6RJQy\",\"list\":\"MovieList_list__2rnyn\",\"item\":\"MovieList_item__NkPkZ\",\"link\":\"MovieList_link__Vh6rU\",\"img\":\"MovieList_img__eH6st\",\"info\":\"MovieList_info__eZ7jA\",\"MoviesDetailsSCSS\":\"MovieList_MoviesDetailsSCSS__p4Y5h\"};"],"names":["BASE_URL","API_KEY","IMG_URL","SearchTrend","page","serverDataURL","axios","server","data","console","log","SearchMovies","name","SearchMoviesDetails","id","SearchMoviesActor","SearchMoviesReviews","MovieItem","movie","url","useLocation","pathname","className","MovieListSCSS","to","src","poster_path","defoltImg","alt","title","list","useState","movies","setMovies","setTitle","loader","setLoader","useEffect","serverAPI","results","map"],"sourceRoot":""}